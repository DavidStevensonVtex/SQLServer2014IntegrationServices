<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/1/2023 6:09:13 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DSTEVENSONWIN10"
  DTS:CreatorName="DSTEVENSONWIN10\drste"
  DTS:DTSID="{E8E875CB-C520-4734-B382-A368807434C6}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5035.3"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="7"
  DTS:VersionGUID="{CBC6E31F-A00F-47E8-8D81-452669EAA778}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[contacts.csv]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{776AA85C-0614-486E-B2B5-840799FD2D72}"
      DTS:ObjectName="contacts.csv">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\ProSSIS\ch09\contacts.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FirstName"
              DTS:DTSID="{17CCA795-D7C5-4DC3-918F-8DBB0CC5EDEA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="LastName"
              DTS:DTSID="{0BDC8130-4D71-4200-96E0-B5953A85277D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="City"
              DTS:DTSID="{20F30F65-90A7-4538-A08B-4B74D99B5A6B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="State"
              DTS:DTSID="{668247BA-86B0-414B-80FD-6C3CCF4D8CC9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Zip"
              DTS:DTSID="{D9E0F59E-9BC4-40B1-A77B-0628B00997F8}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost\SQL_2022.AdventureWorks1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{7065C7BC-F20E-4FCC-B84C-6E93495FF3C3}"
      DTS:ObjectName="localhost\SQL_2022.AdventureWorks1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost\SQL_2022;Initial Catalog=AdventureWorks;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{7065C7BC-F20E-4FCC-B84C-6E93495FF3C3}localhost\SQL_2022.AdventureWorks1;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{32D7A90F-7DF4-4F7F-9B85-760D5D603732}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input].Columns[GoodFlag]"
                      cachedDataType="bool"
                      cachedName="GoodFlag"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[GoodFlag]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Conditional Split.Outputs[Good]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Good"
                  synchronousInputId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[GoodFlag]} ==  TRUE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">GoodFlag ==  TRUE </property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split.Outputs[Bad]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Bad"
                  synchronousInputId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Error Contacts SQL Server Destination"
              componentClassID="Microsoft.SQLServerDestination"
              contactInfo="SQL Server Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
              description="SQL Server Destination"
              name="Error Contacts SQL Server Destination"
              version="5">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.String"
                  description="The name of the database object to copy data into."
                  expressionType="Notify"
                  name="BulkInsertTableName">[ErrorContacts]</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that any constraints on the destination object are checked during the data copy operation. Corresponds to the bulk insert CHECK_CONSTRAINTS option."
                  name="BulkInsertCheckConstraints">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of the first row to copy. Corresponds to the bulk insert FIRSTROW option."
                  expressionType="Notify"
                  name="BulkInsertFirstRow">-1</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that any insert triggers defined on the destination object will execute during the data copy. Corresponds to the bulk insert FIRE_TRIGGERS option."
                  name="BulkInsertFireTriggers">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Corresponds to the bulk insert KEEPIDENTITY option."
                  name="BulkInsertKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null copied to the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="BulkInsertKeepNulls">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of the last row to copy. Corresponds to the bulk insert LASTROW option."
                  expressionType="Notify"
                  name="BulkInsertLastRow">-1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of syntax errors and compilation errors that can occur before the data copy operation is canceled. Each row that cannot be copied is ignored and counted as one error. Corresponds to the bulk insert MAXERRORS option."
                  name="BulkInsertMaxErrors">-1</property>
                <property
                  dataType="System.String"
                  description="Specifies how the data to be copied is sorted. Corresponds to the bulk insert ORDER option."
                  expressionType="Notify"
                  name="BulkInsertOrder"></property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that a table-level lock is acquired for the duration of the data copy operation. Corresponds to the bulk insert TABLOCK option."
                  name="BulkInsertTablock">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies in seconds the amount of time the SQL Destination adapter will wait before terminating if there is no data available for insertion.  A timeout value of 0 means the SQL Destination adapter will not time out."
                  expressionType="Notify"
                  name="Timeout">30</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion."
                  name="MaxInsertCommitSize">0</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost\SQL_2022.AdventureWorks1]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost\SQL_2022.AdventureWorks1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input]"
                  hasSideEffects="true"
                  name="SQL Server Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].Columns[FirstName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FirstName"
                      externalMetadataColumnId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[FirstName]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[FirstName]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].Columns[LastName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastName"
                      externalMetadataColumnId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[LastName]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[LastName]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].Columns[City]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="City"
                      externalMetadataColumnId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[City]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[City]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].Columns[State]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="State"
                      externalMetadataColumnId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[State]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[State]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Zip]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Zip"
                      externalMetadataColumnId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Zip]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Zip]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].Columns[GoodFlag]"
                      cachedDataType="bool"
                      cachedName="GoodFlag"
                      externalMetadataColumnId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[GoodFlag]"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[GoodFlag]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].Columns[RejectReason]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RejectReason"
                      externalMetadataColumnId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[RejectReason]"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[RejectReason]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[LastName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[City]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[State]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Zip]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Zip" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[GoodFlag]"
                      dataType="bool"
                      name="GoodFlag" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[RejectReason]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="RejectReason" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Data Flow Task\Flat File Source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Flat File Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Flat File Source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[contacts.csv]"
                  connectionManagerRefId="Package.ConnectionManagers[contacts.csv]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FirstName]"
                      length="50"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[FirstName]"
                      name="FirstName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[LastName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[LastName]"
                      length="50"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[LastName]"
                      name="LastName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[City]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[City]"
                      length="50"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[State]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[State]"
                      length="50"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[State]"
                      name="State"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Zip]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Zip]"
                      length="50"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Zip]"
                      name="Zip"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[LastName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[City]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[State]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Zip]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Zip" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Text.RegularExpressions;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private Regex zipRegex;
    private Regex stateRegex;
    public override void PreExecute()
    {
        base.PreExecute();
        zipRegex = new Regex("^\\d{5}([\\-]\\d{4})?$", RegexOptions.None);
        stateRegex = new Regex("\\b([A-Z]{2})\\b", RegexOptions.None);
    }

    private bool ZipIsValid(ref string zip, ref string reason)
    {
        zip = zip.Trim();
        if (zipRegex.IsMatch(zip))
        {
            return true;
        }
        else
        {
            if (zip.Length > 5)
            {
                zip = zip.Substring(0, 5);
                if (zipRegex.IsMatch(zip))
                {
                    return true;
                }
                else
                {
                    reason = "Zip larger than 5 Chars, " +
                                  "Retested at 5 Chars and Failed";
                    return false;
                }
            }
            else
            {
                reason = "Zip Failed Initial Format Rule";
                return false;
            }
        }
    }

    private bool StateIsValid(ref string state, ref string reason)
    {
        state = state.Trim().ToUpper();
        if (stateRegex.IsMatch(state))
        {
            return true;
        }
        else
        {
            reason = "Failed State Validation";
            return false;
        }
    }
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.GoodFlag = false;
        string myZip = string.Empty;
        string myState = string.Empty;
        string reason = string.Empty;

        if (!Row.FirstName_IsNull && !Row.LastName_IsNull &&
            !Row.City_IsNull && !Row.State_IsNull && !Row.Zip_IsNull)
        {
            myZip = Row.Zip;
            myState = Row.State;
            if (ZipIsValid(ref myZip, ref reason) &&
                        StateIsValid(ref myState, ref reason))
            {
                Row.Zip = myZip;
                Row.State = myState;
                Row.GoodFlag = true;
            }
            else
            {
                Row.RejectReason = reason;
            }
        }
        else
        {
            Row.RejectReason = "All Required Fields not completed";
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FirstName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool FirstName_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String LastName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool LastName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String City
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool City_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool State_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
        set
        {
            this[4] = value;
        }
    }
    public bool Zip_IsNull
    {
        get
        {
            return IsNull(4);
        }
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean GoodFlag
    {
        set
        {
            this[5] = value;
        }
    }
    public bool GoodFlag_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RejectReason
    {
        set
        {
            this[6] = value;
        }
    }
    public bool RejectReason_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5f1cc8f9d8de4bf48fec2a0a46c60778.Properties.Settings.get_Default():SC_5f1cc8f9d8de4bf48fec2a0a46c60778.Properties.Sett" +
    "ings")]

namespace SC_5f1cc8f9d8de4bf48fec2a0a46c60778.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_5f1cc8f9d8de4bf48fec2a0a46c60778</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_5f1cc8f9d8de4bf48fec2a0a46c60778</msb:DisplayName>
    <msb:ProjectId>{152C472A-6E40-4302-AA65-369CD17B3ACE}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_5f1cc8f9d8de4bf48fec2a0a46c60778.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_5f1cc8f9d8de4bf48fec2a0a46c60778")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_5f1cc8f9d8de4bf48fec2a0a46c60778")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_5f1cc8f9d8de4bf48fec2a0a46c60778.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{98285928-645D-4984-A507-E22EC3CB5E0C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_5f1cc8f9d8de4bf48fec2a0a46c60778</RootNamespace>
    <AssemblyName>SC_5f1cc8f9d8de4bf48fec2a0a46c60778</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5f1cc8f9d8de4bf48fec2a0a46c60778.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5f1cc8f9d8de4bf48fec2a0a46c60778.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5f1cc8f9d8de4bf48fec2a0a46c60778.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_5f1cc8f9d8de4bf48fec2a0a46c60778.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_5f1cc8f9d8de4bf48fec2a0a46c60778.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_5f1cc8f9d8de4bf48fec2a0a46c60778.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALcheWQAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAEjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMA4AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAGBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD0
OAAAAAAAAEgAAAACAAUA5CMAACQUAAABAAAAAAAAAAg4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKYCKBAAAAoCcgEAAHAWcxEAAAp9AQAABAJyKQAAcBZzEQAA
Cn0CAAAEKgAAEzAEAFIAAAAAAAAAAwNQbxIAAApRAnsBAAAEA1BvEwAACiwCFyoDUG8UAAAKGzEl
AwNQFhtvFQAAClECewEAAAQDUG8TAAAKLAIXKgRyRwAAcFEWKgRytwAAcFEWKqIDA1BvEgAACm8W
AAAKUQJ7AgAABANQbxMAAAosAhcqBHL1AABwURYqHgIoFwAACioAEzADAJEAAAABAAARAxZvGAAA
Bn4YAAAKCn4YAAAKC34YAAAKDANvCQAABi1kA28LAAAGLVwDbw4AAAYtVANvEgAABi1MA28WAAAG
LUQDbxQAAAYKA28QAAAGCwISABICKAIAAAYsIgISARICKAMAAAYsFgMGbxUAAAYDB28RAAAGAxdv
GAAABioDCG8aAAAGKgNyJQEAcG8aAAAGKh4CKB4AAAYqKgIDBAUoGQAACipSAnsaAAAKAnsbAAAK
FpRvHAAACioiAhYoHQAACipSAnsaAAAKAnsbAAAKF5RvHAAACioiAhcoHQAACipSAnsaAAAKAnsb
AAAKGJRvHAAACiomAhgDKB4AAAoqIgIYKB0AAAoqWgMsCAIYKB8AAAoqcmkBAHBzIAAACnpSAnsa
AAAKAnsbAAAKGZRvHAAACiomAhkDKB4AAAoqIgIZKB0AAAoqWgMsCAIZKB8AAAoqcmkBAHBzIAAA
CnpSAnsaAAAKAnsbAAAKGpRvHAAACiomAhoDKB4AAAoqIgIaKB0AAAoqWgMsCAIaKB8AAAoqcmkB
AHBzIAAACno6AhsDjB4AAAEoHgAACipaAywIAhsoHwAACipyaQEAcHMgAAAKeiYCHAMoHgAACipa
AywIAhwoHwAACipyaQEAcHMgAAAKeh4CKCEAAAoqHgIoIgAACip+AigjAAAKAgJzIgAABn0DAAAE
AgJzIwAABn0EAAAEKpIEcgYCAHAabyQAAAosFQIFAgMoJQAACg4EcwcAAAZvIAAABipKKwcCA28h
AAAGA28cAAAGLfEqBio6AigmAAAKAgN9BQAABCo6AigmAAAKAgN9BgAABCoeAigmAAAKKq5+BwAA
BC0echYCAHDQBwAAAignAAAKbygAAApzKQAACoAHAAAEfgcAAAQqGn4IAAAEKh4CgAgAAAQqGn4J
AAAEKh4CKCoAAAoqLnMpAAAGgAkAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAF
AGwAAACUBwAAI34AAAAIAAC8BwAAI1N0cmluZ3MAAAAAvA8AAIgCAAAjVVMARBIAABAAAAAjR1VJ
RAAAAFQSAADQAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAIgAAAAgAAAAJ
AAAAKgAAABsAAAAqAAAAEAAAAAEAAAADAAAAEQAAABgAAAABAAAABAAAAAEAAAAAAGQDAQAAAAAA
BgAxApkFBgDFApkFBgB9AYYFDwANBgAABgCqAacEBgAUAqcEBgD1AacEBgCsAqcEBgBRAqcEBgBq
AqcEBgDBAacEBgDcAQ0DCgCFArAADgCOB4oGCgBQBbAAEgBBBbAACgAIBbAACgD/BrAABgDCBlIE
BgBgAYYFBgBhBbkFBgD8BJIEDgAqAU4DDgCRAU4DDgD+AH0EBgBFAZkFDgC1BooGBgAqA1IEBgC5
BFIEBgBqBFIEBgDrBFIEBgDRAFIEBgBnAFIEBgCYB6cEAAAAACUAAAAAAAEAAQABABAAcgQAABAA
AQABAAEAEAA0BQAAPQADAAcAAQAQAOEGAABJAAMAHgABABAAqQYAAE0ABQAiAAEAEABLBgAATQAG
ACMAAAAQAMAFHAZNAAcAJAAAARAAegYcBmUACQAoAAEAiweaAAEAgAeaAAYAqQaeAAYASwaiAAEA
7wamAAEA7wamABEAXgSqABEA7gCuABEAVwCyAFAgAAAAAMYA4wIGAAEAfCAAAAAAgQBMALYAAQDa
IAAAAACBAD8AtgADAAMhAAAAAMYA7gIGAAUADCEAAAAAxgBhB74ABQCpIQAAAACGGHkFBgAGALEh
AAAAAIYYeQU+AAYAvCEAAAAAhgiYACIACQDRIQAAAACGCKADYAAJANohAAAAAIYIiwAiAAkA7yEA
AAAAhgiMA2AACQD4IQAAAACGCKEHIgAJAA0iAAAAAIYIqgcQAAkAFyIAAAAAhgghBGAACgAgIgAA
AACGCDEExAAKADciAAAAAIYIFgEiAAsATCIAAAAAhgggARAACwBWIgAAAACGCLUDYAAMAF8iAAAA
AIYIxgPEAAwAdiIAAAAAhgggBSIADQCLIgAAAACGCCgFEAANAJUiAAAAAIYIAwRgAA4AniIAAAAA
hggSBMQADgC1IgAAAACGCAADxAAPAMQiAAAAAIYI1wPEABAA2yIAAAAAhgjTBBAAEQDlIgAAAACG
COsDxAASAPwiAAAAAIYAeAdgABMABCMAAAAAhgDJBmAAEwAMIwAAAACGGHkFBgATACwjAAAAAMYA
VAfJABMAUSMAAAAAxgFNB74AFwBkIwAAAADGAWEHvgAYAGYjAAAAAIYYeQXTABkAdSMAAAAAhhh5
BdMAGgCEIwAAAACDGHkFBgAbAIwjAAAAAJMIXQXZABsAuCMAAAAAkwjWAN4AGwC/IwAAAACTCOIA
4wAbAMcjAAAAAJYI1QbpABwAziMAAAAAhhh5BQYAHADWIwAAAACRGH8F7gAcAAAAAQAwBQAAAgDk
BAAAAQA/AQAAAgDkBAAAAQB8BwAAAQBWBQAAAgBVBgAAAwAWBQAAAQD6AgAAAQD6AgAAAQD6AgAA
AQD6AgAAAQD6AgAAAQD6AgAAAQD6AgAAAQD6AgAAAQD6AgAAAQD6AgAAAQAuAAAAAgCmAAAAAwBW
BQAABAAWBQAAAQBWBQAAAQB8BwAAAQAFBwAAAQAFBwAAAQD6AgkAeQUBABEAeQUGABkAeQUKACkA
eQUQADEAeQUQADkAeQUQAEEAeQUQAEkAeQUQAFEAeQUQAFkAeQUQAGEAeQUQAGkAeQUGAKEAeQUG
AMEAeQUVANEAeQUGAJEA4wIGAHEAeQUbAOEAWQQiAHEAOwMmAOEAQwMrAOEAMQMvAOEAcQUiAJEA
7gIGAOEAswc7AHkAeQU+AHkAVgVIAHkAVQZMAIEAJwNQAHkAOgRVAHkASQRaAHkAQQQBAOkAeQUQ
AHkAeAdgAHkAyQZgAJEAeQUGAOEAgwZkAJEAaQZrAJkAeQUGAAEBeQBxAAEBlAd6AKkAeQWAAMkA
eQUGAC4ACwAJAS4AEwASAS4AGwAxAS4AIwA6AS4AKwBjAS4AMwBjAS4AOwBjAS4AQwA6AS4ASwBp
AS4AUwBjAS4AWwCAAUMAYwDKAeMAawDKASEBewDKAekBcwAxAQkCcwAxATUAAwABAAcADwAIABEA
AACcAPIAAACkA/YAAACPAPIAAACQA/YAAACuB/IAAAA1BPYAAAA5AfIAAADKA/YAAAAsBfIAAAAW
BPYAAAAEA/YAAADbA/YAAADXBPIAAADvA/YAAABhBfoAAAD2AP8AAADZBgQBAgAIAAMAAgAJAAUA
AgAKAAcAAgALAAkAAgAMAAsAAQANAAsAAgAOAA0AAQAPAA0AAgAQAA8AAQARAA8AAgASABEAAQAT
ABEAAgAUABMAAQAVABMAAgAWABUAAQAXABUAAQAYABcAAQAZABkAAQAaABsAAQAbAB0AAgAlAB8A
AgAmACEAAQAnACEAAgAoACMABIAAAAEAAAAAAAAAAAAAAAAAAQAAAAQAAAAAAAAAAAAAAIgANgAA
AAAAEAAAAAAAAAAAAAAAkQAPBwAAAAAEAAAAAAAAAAAAAACIAFIEAAAAABAAAAAAAAAAAAAAAJEA
LAcAAAAAAAAAAAEAAADKBQAAAAAAAABTQ181ZjFjYzhmOWQ4ZGU0YmY0OGZlYzJhMGE0NmM2MDc3
OAA8TW9kdWxlPgBJbnB1dElEAG1zY29ybGliAFN0YXRlSXNWYWxpZABaaXBJc1ZhbGlkAGRlZmF1
bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfTGFzdE5h
bWUAZ2V0X0ZpcnN0TmFtZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxp
bmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UAZ2V0X1N0YXRlAHNldF9TdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBz
dGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25l
bnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAHNldF9Hb29k
RmxhZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBTdWJzdHJpbmcASXNNYXRj
aABnZXRfTGVuZ3RoAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ181ZjFjYzhmOWQ4ZGU0YmY0OGZl
YzJhMGE0NmM2MDc3OC5kbGwAZ2V0X0xhc3ROYW1lX0lzTnVsbABnZXRfRmlyc3ROYW1lX0lzTnVs
bABnZXRfU3RhdGVfSXNOdWxsAHNldF9TdGF0ZV9Jc051bGwAc2V0X0dvb2RGbGFnX0lzTnVsbABz
ZXRfUmVqZWN0UmVhc29uX0lzTnVsbABnZXRfWmlwX0lzTnVsbABzZXRfWmlwX0lzTnVsbABnZXRf
Q2l0eV9Jc051bGwAc2V0X0NpdHlfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAFRyaW0A
cmVzb3VyY2VNYW4AQm9vbGVhbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRp
b24Ac2V0X1JlamVjdFJlYXNvbgByZWFzb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBP
dXRwdXROYW1lTWFwAE91dHB1dE1hcABnZXRfWmlwAHNldF9aaXAAemlwAElucHV0MEJ1ZmZlcgBQ
aXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb1VwcGVyAC5j
dG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzVmMWNjOGY5ZDhkZTRiZjQ4ZmVjMmEwYTQ2YzYwNzc4
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ181ZjFjYzhm
OWQ4ZGU0YmY0OGZlYzJhMGE0NmM2MDc3OC5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1
bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAFN5c3RlbS5UZXh0LlJl
Z3VsYXJFeHByZXNzaW9ucwBDb25uZWN0aW9ucwBSZWdleE9wdGlvbnMAT2JqZWN0AEVuZE9mUm93
c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBv
bmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlw
ZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0
Um93AHN0YXRlUmVnZXgAemlwUmVnZXgAZ2V0X0Fzc2VtYmx5AGdldF9DaXR5AHNldF9DaXR5AEVt
cHR5AAAAAAAnXgBcAGQAewA1AH0AKABbAFwALQBdAFwAZAB7ADQAfQApAD8AJAABHVwAYgAoAFsA
QQAtAFoAXQB7ADIAfQApAFwAYgABb1oAaQBwACAAbABhAHIAZwBlAHIAIAB0AGgAYQBuACAANQAg
AEMAaABhAHIAcwAsACAAUgBlAHQAZQBzAHQAZQBkACAAYQB0ACAANQAgAEMAaABhAHIAcwAgAGEA
bgBkACAARgBhAGkAbABlAGQAAD1aAGkAcAAgAEYAYQBpAGwAZQBkACAASQBuAGkAdABpAGEAbAAg
AEYAbwByAG0AYQB0ACAAUgB1AGwAZQAAL0YAYQBpAGwAZQBkACAAUwB0AGEAdABlACAAVgBhAGwA
aQBkAGEAdABpAG8AbgAAQ0EAbABsACAAUgBlAHEAdQBpAHIAZQBkACAARgBpAGUAbABkAHMAIABu
AG8AdAAgAGMAbwBtAHAAbABlAHQAZQBkAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5
ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMA
aQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBz
AHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwA1AGYAMQBjAGMAOABmADkAZAA4AGQA
ZQA0AGIAZgA0ADgAZgBlAGMAMgBhADAAYQA0ADYAYwA2ADAANwA3ADgALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAABZNw8YyAqlDrMOQ0dsZbCoABCABAQgDIAABBSAB
ARERBCABAQ4FIAEBEV0GIAIBDhFtAyAADgQgAQIOAyAACAUgAg4ICAUHAw4ODgIGDgkgAwESQR0I
EkUDBhJBAwYdCAQgAQ4IBCABAggFIAIBCBwDIAACBiACAg4RfQUgAR0ICAgAARKAgRGAhQUgABKA
iQcgAgEOEoCJCLd6XFYZNOCJCImEXc2AgMyRAwYSOQMGEhQDBhIYAwYSSQMGElUDBhJZAwYSIAcg
AgIQDhAOBSABARIMBCABAQIJIAQBCA4SQRJFBSABARJJBAAAElUEAAASWQUAAQESWQQAABIgAwAA
AQMoAA4DKAACBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTQ181ZjFjYzhmOWQ4ZGU0YmY0OGZlYzJhMGE0NmM2MDc3OAAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIzAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAADoOAAAAAAAAAAAAAACOQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9DgAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwA1AGYAMQBjAGMAOABmADkAZAA4AGQAZQA0AGIAZgA0ADgAZgBlAGMAMgBhADAAYQA0ADYA
YwA2ADAANwA3ADgAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADUAZgAxAGMAYwA4AGYA
OQBkADgAZABlADQAYgBmADQAOABmAGUAYwAyAGEAMABhADQANgBjADYAMAA3ADcAOAAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANQBmADEA
YwBjADgAZgA5AGQAOABkAGUANABiAGYANAA4AGYAZQBjADIAYQAwAGEANAA2AGMANgAwADcANwA4
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUAZgAxAGMA
YwA4AGYAOQBkADgAZABlADQAYgBmADQAOABmAGUAYwAyAGEAMABhADQANgBjADYAMAA3ADcAOAAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAFDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_5f1cc8f9d8de4bf48fec2a0a46c60778</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">4D</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Script Component.Inputs[Input 0].Columns[FirstName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FirstName"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[FirstName]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Component.Inputs[Input 0].Columns[LastName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastName"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[LastName]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Component.Inputs[Input 0].Columns[City]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="City"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[City]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Component.Inputs[Input 0].Columns[State]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="State"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[State]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Component.Inputs[Input 0].Columns[Zip]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Zip"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Zip]"
                      usageType="readWrite" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[GoodFlag]"
                      dataType="bool"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[GoodFlag]"
                      name="GoodFlag" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[RejectReason]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[RejectReason]"
                      name="RejectReason" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Validated Contacts SQL Server Destination"
              componentClassID="Microsoft.SQLServerDestination"
              contactInfo="SQL Server Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
              description="SQL Server Destination"
              name="Validated Contacts SQL Server Destination"
              version="5">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.String"
                  description="The name of the database object to copy data into."
                  expressionType="Notify"
                  name="BulkInsertTableName">[ValidatedContacts]</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that any constraints on the destination object are checked during the data copy operation. Corresponds to the bulk insert CHECK_CONSTRAINTS option."
                  name="BulkInsertCheckConstraints">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of the first row to copy. Corresponds to the bulk insert FIRSTROW option."
                  expressionType="Notify"
                  name="BulkInsertFirstRow">-1</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that any insert triggers defined on the destination object will execute during the data copy. Corresponds to the bulk insert FIRE_TRIGGERS option."
                  name="BulkInsertFireTriggers">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Corresponds to the bulk insert KEEPIDENTITY option."
                  name="BulkInsertKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null copied to the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="BulkInsertKeepNulls">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of the last row to copy. Corresponds to the bulk insert LASTROW option."
                  expressionType="Notify"
                  name="BulkInsertLastRow">-1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of syntax errors and compilation errors that can occur before the data copy operation is canceled. Each row that cannot be copied is ignored and counted as one error. Corresponds to the bulk insert MAXERRORS option."
                  name="BulkInsertMaxErrors">-1</property>
                <property
                  dataType="System.String"
                  description="Specifies how the data to be copied is sorted. Corresponds to the bulk insert ORDER option."
                  expressionType="Notify"
                  name="BulkInsertOrder"></property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that a table-level lock is acquired for the duration of the data copy operation. Corresponds to the bulk insert TABLOCK option."
                  name="BulkInsertTablock">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies in seconds the amount of time the SQL Destination adapter will wait before terminating if there is no data available for insertion.  A timeout value of 0 means the SQL Destination adapter will not time out."
                  expressionType="Notify"
                  name="Timeout">30</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion."
                  name="MaxInsertCommitSize">0</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost\SQL_2022.AdventureWorks1]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost\SQL_2022.AdventureWorks1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input]"
                  hasSideEffects="true"
                  name="SQL Server Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].Columns[FirstName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FirstName"
                      externalMetadataColumnId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[FirstName]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[FirstName]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].Columns[LastName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastName"
                      externalMetadataColumnId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[LastName]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[LastName]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].Columns[City]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="City"
                      externalMetadataColumnId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[City]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[City]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].Columns[State]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="State"
                      externalMetadataColumnId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[State]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[State]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Zip]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Zip"
                      externalMetadataColumnId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Zip]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Zip]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[LastName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[City]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[State]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Zip]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Zip" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[GoodFlag]"
                      dataType="bool"
                      name="GoodFlag" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[RejectReason]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="RejectReason" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Bad]"
              endId="Package\Data Flow Task\Error Contacts SQL Server Destination.Inputs[SQL Server Destination Input]"
              name="Bad"
              startId="Package\Data Flow Task\Conditional Split.Outputs[Bad]" />
            <path
              refId="Package\Data Flow Task.Paths[Flat File Source Output]"
              endId="Package\Data Flow Task\Script Component.Inputs[Input 0]"
              name="Flat File Source Output"
              startId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Good]"
              endId="Package\Data Flow Task\Validated Contacts SQL Server Destination.Inputs[SQL Server Destination Input]"
              name="Good"
              startId="Package\Data Flow Task\Conditional Split.Outputs[Good]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 0]"
              endId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
              name="Output 0"
              startId="Package\Data Flow Task\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Data Flow Task"
          TopLeft="269.999989271164,130.866667706702" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Data Flow Task\Script Component"
          TopLeft="359.999985694886,144.733334483571" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Data Flow Task\Flat File Source"
          TopLeft="359.999985694886,27.7333335537381" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Flat File Source Output]"
          TopLeft="438.199985694886,69.3333335537381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,75.4000009298324"
              Start="0,0"
              End="0,67.9000009298324">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.9000009298324" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Data Flow Task\Conditional Split"
          TopLeft="367.499985396863,241.800001921654" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 0]"
          TopLeft="442.549985545874,186.33333448357">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55.4666674380833"
              Start="0,0"
              End="0,47.9666674380833">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.9666674380833" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="256.8,41.6"
          Id="Package\Data Flow Task\Error Contacts SQL Server Destination"
          TopLeft="132.499994734923,360.533336198595" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Bad]"
          TopLeft="444.299985396863,283.400001921654">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-183.399990661939,77.133334276941"
              Start="0,0"
              End="-183.399990661939,69.633334276941">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5666671384705" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.5666671384705"
                    Point2="0,38.5666671384705"
                    Point3="-4,38.5666671384705" />
                  <mssgle:LineSegment
                    End="-179.399990661939,38.5666671384705" />
                  <mssgle:CubicBezierSegment
                    Point1="-179.399990661939,38.5666671384705"
                    Point2="-183.399990661939,38.5666671384705"
                    Point3="-183.399990661939,42.5666671384705" />
                  <mssgle:LineSegment
                    End="-183.399990661939,69.633334276941" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-100.33298361222,43.5666671384705,17.2659765625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="277.6,41.6"
          Id="Package\Data Flow Task\Validated Contacts SQL Server Destination"
          TopLeft="537.49997864167,358.800002851486" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Good]"
          TopLeft="468.566652063529,283.400001921654">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="207.733326578141,75.4000009298324"
              Start="0,0"
              End="207.733326578141,67.9000009298324">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.6263921302618" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.6263921302618"
                    Point2="0,30.6263921302618"
                    Point3="4,30.6263921302618" />
                  <mssgle:LineSegment
                    End="203.733326578141,30.6263921302618" />
                  <mssgle:CubicBezierSegment
                    Point1="203.733326578141,30.6263921302618"
                    Point2="207.733326578141,30.6263921302618"
                    Point3="207.733326578141,34.6263921302618" />
                  <mssgle:LineSegment
                    End="207.733326578141,67.9000009298324" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="91.8311554765703,35.6263921302618,24.071015625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Error Contacts SQL Server Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Validated Contacts SQL Server Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>